{"version":3,"sources":["webpack:///./src/pages/cn/download.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/downloads.js","webpack:///./src/components/seo.js","webpack:///./src/components/headerEN.js","webpack:///./src/components/headerCN.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utilities/device-detect.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_utilities_device_detect__WEBPACK_IMPORTED_MODULE_3__","DownloadPage","deviceOS","getMobileOperatingSystem","a","createElement","language","title","httpEquiv","content","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","Downloads","_ref","iosTitle","iosLink","androidTitle","androidLink","_ref$size","size","data","_public_static_d_484292569_json__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_2__","href","className","styles","downloadItem","downloadMobile","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","iosSmall","childImageSharp","alt","downloadDesktop","iosMedium","androidSmail","androidMedium","defaultProps","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","property","author","concat","HeaderEN","siteTitle","logo","iconLan","iconMenu","iconClose","lanTitle","react_default","header","gatsby_browser_entry","to","gatsby_image_default","HeaderCN","Header","_4030748266","headerEN","iconLanCN","headerCN","titleCN","iconLanEN","Footer","homeLink","homeTitle","integrationLink","integrationTitle","creditLink","creditTitle","policyTitle","termsTitle","mobile","Date","getFullYear","desktop","nav","react","downloads","copyrightPolicy","policy","Layout","children","footer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","userAgent","navigator","vendor","window","opera","test","MSStream"],"mappings":"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","file":"component---src-pages-cn-download-js-e2fa05adb21e2e80bb4c.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport getMobileOperatingSystem from \"../../utilities/device-detect\"\n\nconst DownloadPage = () => {\n\n  const deviceOS = getMobileOperatingSystem();\n\n  if (deviceOS === 'Android') {\n    return (\n      <Layout language={`cn`}>\n        <SEO title={`下载色采应用`}/>\n        <meta httpEquiv=\"refresh\"\n              content=\"2; URL='https://www.coolapk.com/apk/231885'\" />\n        <div>\n          即将访问「酷安」应用商店……\n        </div>\n\n      </Layout>\n    )\n  }\n\n  if (deviceOS === 'iOS') {\n    return (\n      <Layout language={`cn`}>\n        <SEO title={`下载色采应用`}/>\n        <meta httpEquiv=\"refresh\"\n              content=\"2; URL='https://apps.apple.com/cn/app/id1439521846'\" />\n        <div>\n          即将访问 iOS 应用商店……\n        </div>\n\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout language={`cn`}>\n      <SEO title={`下载色采应用`}/>\n      <meta httpEquiv=\"refresh\" content=\"0; URL='/'\" />\n      <div>\n        即将访问网站首页进行下载……\n      </div>\n    </Layout>\n  )\n}\n\nexport default DownloadPage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React, { Fragment } from \"react\"\nimport Img from \"gatsby-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styles from \"./downloads.module.css\"\n\nconst Downloads = ({ iosTitle, iosLink, androidTitle, androidLink, size = `m` }) => {\n\n  function IosImageDesktop() {\n    if (size === \"s\") {\n      return <Img fixed={data.iosSmall.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    } else {\n      return <Img fixed={data.iosMedium.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    }\n  }\n\n  function AndroidImageDesktop() {\n    if (size === \"s\") {\n      return <Img fixed={data.androidSmail.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    } else {\n      return <Img fixed={data.androidMedium.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    }\n  }\n\n  const data = useStaticQuery(graphql`\n    query {\n      iosSmall: file(relativePath: { eq: \"button/download-ios.png\" }) {\n        childImageSharp {\n          fixed(width: 48, height: 48) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      androidSmail: file(relativePath: { eq: \"button/download-android.png\" }) {\n        childImageSharp {\n          fixed(width: 48, height: 48) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iosMedium: file(relativePath: { eq: \"button/download-ios.png\" }) {\n        childImageSharp {\n          fixed(width: 64, height: 64) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      androidMedium: file(relativePath: { eq: \"button/download-android.png\" }) {\n        childImageSharp {\n          fixed(width: 64, height: 64) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Fragment>\n      <a href={iosLink}\n         className={styles.downloadItem}\n      >\n        <span className={styles.downloadMobile}>\n          <Img fixed={data.iosSmall.childImageSharp.fixed}\n               title={iosTitle}\n               alt={iosTitle}\n          />\n        </span>\n        <span className={styles.downloadDesktop}>\n          <IosImageDesktop/>\n        </span>\n      </a>\n      <a href={androidLink}\n         className={styles.downloadItem}\n      >\n        <span className={styles.downloadMobile}>\n          <Img fixed={data.androidSmail.childImageSharp.fixed}\n               title={androidTitle}\n               alt={androidTitle}\n          />\n        </span>\n        <span className={styles.downloadDesktop}>\n          <AndroidImageDesktop/>\n        </span>\n      </a>\n    </Fragment>\n  )\n}\n\nDownloads.propTypes = {}\n\nDownloads.defaultProps = {}\n\nexport default Downloads","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styles from \"./header.module.css\"\n\n\nconst HeaderEN = ({ siteTitle, logo, iconMenu, iconClose, iconLan, lanTitle }) => {\n  return (\n    <header className={styles.header}>\n      <Link to={`/cn/`} className={styles.language}>\n        <Img fixed={iconLan} title={lanTitle} alt={lanTitle} />\n      </Link>\n      <Link to=\"/\" className={styles.logo}>\n        <Img fixed={logo} title={siteTitle} alt={siteTitle + ` Logo`} />\n      </Link>\n      {/*<div className={styles.menu}>*/}\n      {/*  <div className={styles.menuTrigger}>*/}\n      {/*    <Img fixed={iconMenu} title=\"Open Menu\" alt=\"Open Menu\" />*/}\n      {/*    /!*<Img fixed={iconClose} title=\"Close Menu\" alt=\"Close Menu\" />*!/*/}\n      {/*  </div>*/}\n      {/*  <div className={styles.menuList}>*/}\n      {/*    /!*<Link to={`/`}>Palettes</Link>*!/*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n    </header>\n  )\n}\n\nHeaderEN.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeaderEN.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default HeaderEN\n","import { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styles from \"./header.module.css\"\n\n\nconst HeaderCN = ({ siteTitle, logo, iconMenu, iconClose, iconLan, lanTitle }) => {\n  return (\n    <header className={styles.header}>\n      <Link to={`/`} className={styles.language}>\n        <Img fixed={iconLan} title={lanTitle} alt={lanTitle}/>\n      </Link>\n      <Link to=\"/cn/\" className={styles.logo}>\n        <Img fixed={logo} title={siteTitle} alt={siteTitle + ` Logo`}/>\n      </Link>\n      {/*<div className={styles.menu}>*/}\n      {/*  <div className={styles.menuTrigger}>*/}\n      {/*    <Img fixed={iconMenu} title=\"Open Menu\" alt=\"Open Menu\"/>*/}\n      {/*    /!*<Img fixed={iconClose} title=\"Close Menu\" alt=\"Close Menu\" />*!/*/}\n      {/*  </div>*/}\n      {/*  <div className={styles.menuList}>*/}\n      {/*    /!*<Link to={`/`}>探索色卡</Link>*!/*/}\n      {/*    /!*<Link to={`/`}>合作应用</Link>*!/*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n    </header>\n  )\n}\n\nHeaderCN.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeaderCN.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default HeaderCN\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport HeaderEN from \"./headerEN\"\nimport HeaderCN from \"./headerCN\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\n\nconst Header = ({ language }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          titleCN\n        }\n      }\n      \n      logo: file(relativePath: { eq: \"logos/colorcollect-mobile-logo.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconMenu: file(relativePath: { eq: \"icons/menu.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconClose: file(relativePath: { eq: \"icons/close.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconLanCN: file(relativePath: { eq: \"icons/language-cn.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconLanEN: file(relativePath: { eq: \"icons/language-en.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  if (language === 'en') {\n    return (\n      <HeaderEN siteTitle={data.site.siteMetadata.title}\n                logo={data.logo.childImageSharp.fixed}\n                iconMenu={data.iconMenu.childImageSharp.fixed}\n                iconClose={data.iconClose.childImageSharp.fixed}\n                iconLan={data.iconLanCN.childImageSharp.fixed}\n                lanTitle={`访问色采中文网站`}\n      />\n    )\n  } else if (language === 'cn') {\n    return (\n      <HeaderCN siteTitle={data.site.siteMetadata.titleCN}\n                logo={data.logo.childImageSharp.fixed}\n                iconMenu={data.iconMenu.childImageSharp.fixed}\n                iconClose={data.iconClose.childImageSharp.fixed}\n                iconLan={data.iconLanEN.childImageSharp.fixed}\n                lanTitle={`Visit Color Collect Website in English`}\n      />\n    )\n  }\n}\n\nHeader.propTypes = {\n  language: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  language: `en`,\n}\n\nexport default Header\n","import React, { Fragment } from \"react\"\nimport Downloads from \"./downloads\"\nimport styles from \"./footer.module.css\"\nimport { Link } from \"gatsby\"\n\nconst Footer = ({\n                  homeLink, homeTitle,\n                  integrationLink, integrationTitle,\n                  creditLink, creditTitle,\n                  policyTitle, termsTitle,\n                  iosTitle, iosLink,\n                  androidTitle, androidLink\n                }) => {\n  function HomeNav() {\n    if (homeLink) {\n      return <Link to={homeLink}>{homeTitle}</Link>\n    } else {\n      return <Fragment/>\n    }\n  }\n\n  function AppIntegrationNav() {\n    if (integrationLink) {\n      return <Link to={integrationLink}>{integrationTitle}</Link>\n    } else {\n      return <Fragment/>\n    }\n  }\n\n  function CreditNav() {\n    if (creditLink) {\n      return <Link to={creditLink}>{creditTitle}</Link>\n    } else {\n      return <Fragment/>\n    }\n  }\n\n  return (\n    <footer>\n      <div className=\"wrapper\">\n\n        <div className={styles.mobile}>\n          <span className=\"type--body-xsmall type--on-dark\">© {new Date().getFullYear()} All rights reserved</span>\n        </div>\n\n        <div className={styles.desktop}>\n          <div className={styles.nav}>\n            <HomeNav/>\n            <AppIntegrationNav/>\n            <CreditNav/>\n          </div>\n\n          <Downloads size={`s`}\n                     iosTitle={iosTitle}\n                     iosLink={iosLink}\n                     androidTitle={androidTitle}\n                     androidLink={androidLink}\n          />\n\n          <div className={styles.copyrightPolicy}>\n            <div>© {new Date().getFullYear()} All rights reserved</div>\n            <div className={styles.policy}>\n              <Link to={\"/privacy-policy\"}>{policyTitle}</Link>\n              <Link to={\"/terms-of-services\"}>{termsTitle}</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, language }) => {\n\n  function FooterFrag() {\n    if (language === \"en\") {\n      return <Footer homeLink={`/`}\n                     homeTitle={`Home`}\n                     policyTitle={`Privacy Policy`}\n                     termsTitle={`Terms of Use`}\n                     iosTitle={`Download Color Collect for iOS`}\n                     iosLink={`https://apps.apple.com/app/id1439521846`}\n                     androidTitle={`Download Color Collect for Android`}\n                     androidLink={`https://play.google.com/store/apps/details?id=com.wizeyes.colorcapture`}\n      />\n    } else {\n      return <Footer homeLink={`/cn/`}\n                     homeTitle={`首页`}\n                     policyTitle={`隐私条款`}\n                     termsTitle={`使用条款`}\n                     iosTitle={`从苹果商店下载色采 iOS 版本`}\n                     iosLink={`https://apps.apple.com/cn/app/id1439521846`}\n                     androidTitle={`下载色采安卓版本`}\n                     androidLink={`https://www.coolapk.com/apk/231885`}\n      />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"wrapper\">\n        <Header language={language}/>\n        <main>{children}</main>\n      </div>\n      <FooterFrag/>\n    </Fragment>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Determine the mobile operating system.\n * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.\n *\n * @returns {String}\n */\nfunction getMobileOperatingSystem() {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"Windows Phone\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"Android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"iOS\";\n  }\n\n  return \"unknown\";\n}\n\nexport default getMobileOperatingSystem"],"sourceRoot":""}