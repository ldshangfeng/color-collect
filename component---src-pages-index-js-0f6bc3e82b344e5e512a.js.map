{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["IndexPage","data","_public_static_d_1951567641_json__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","style","position","paddingBottom","className","margin","href","target","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","ios","childImageSharp","alt","android","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","display","mockup","right","top","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","logo","iconMenu","iconLan","iconClose","lanTitle","react_default","headerStyles","header","gatsby_image_default","gatsby_browser_entry","Layout","children","_790778509","iconLanCN","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-0f6bc3e82b344e5e512a.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      ios: file(relativePath: { eq: \"button/download-ios.png\" }) {\n        childImageSharp {\n          fixed(width: 48, height: 48) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      android: file(relativePath: { eq: \"button/download-android.png\" }) {\n        childImageSharp {\n          fixed(width: 48, height: 48) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      mockup: file(relativePath: { eq: \"mockups/face.png\" }) {\n        childImageSharp {\n          fixed(width: 203, height: 319) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `,\n  )\n  return (\n    <Layout>\n      <SEO title=\"Home\"/>\n      <div style={{\n        position: 'relative',\n        paddingBottom: 215,\n      }}>\n\n        <div className=\"type--note\">INTRODUCING</div>\n        <h1 className=\"type--h2\" style={{ margin: \"0 0 10px 0\" }}>Color Collect</h1>\n        <p>A color app for everyone.</p>\n\n        <div>\n          <a href=\"https://apps.apple.com/cn/app/id1439521846\"\n             target=\"_blank\"\n             style={{\n               margin: \"0 12px 0 0\",\n             }}\n          >\n            <Img fixed={data.ios.childImageSharp.fixed}\n                 title={`Download Color Collect for iOS`}\n                 alt={`Download Color Collect for iOS`}\n            />\n          </a>\n          <a href=\"https://play.google.com/store/apps/details?id=com.wizeyes.colorcapture\"\n             target=\"_blank\"\n          >\n            <Img fixed={data.android.childImageSharp.fixed}\n                 title={`Download Color Collect for Android`}\n                 alt={`Download Color Collect for Android`}\n            />\n          </a>\n        </div>\n\n        <Link to={\"/\"}\n              className={\"type--link\"}\n              style={{\n                margin: \"42px 0 0 0\",\n                display: \"block\",\n              }}\n        >\n          Explore palettes â†’\n        </Link>\n\n        <Img fixed={data.mockup.childImageSharp.fixed}\n             style={{\n               position: 'absolute',\n               right: -72,\n               top: 125,\n             }}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport headerStyles from \"./header.module.css\"\n\n\nconst Header = ({ siteTitle, logo, iconMenu, iconClose, iconLan, lanTitle }) => (\n  <header className={headerStyles.header}>\n    <Img fixed={iconLan} title={lanTitle} alt={lanTitle} />\n    <Link to=\"/\" className={headerStyles.logo}>\n      <Img fixed={logo} title={siteTitle} alt={siteTitle + ` Logo`} />\n    </Link>\n    <Img fixed={iconMenu} title=\"Open Menu\" alt=\"Open Menu\" />\n    {/*<Img fixed={iconClose} title=\"Close Menu\" alt=\"Close Menu\" />*/}\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      \n      logo: file(relativePath: { eq: \"logos/colorcollect-mobile-logo.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconMenu: file(relativePath: { eq: \"icons/menu.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconClose: file(relativePath: { eq: \"icons/close.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconLanCN: file(relativePath: { eq: \"icons/language-cn.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconLanEN: file(relativePath: { eq: \"icons/language-en.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <Header siteTitle={data.site.siteMetadata.title}\n                logo={data.logo.childImageSharp.fixed}\n                iconMenu={data.iconMenu.childImageSharp.fixed}\n                iconClose={data.iconClose.childImageSharp.fixed}\n                iconLan={data.iconLanCN.childImageSharp.fixed}\n                lanTitle={`è®¿é—®è‰²é‡‡ä¸­æ–‡ç½‘ç«™`}\n        />\n        <main>{children}</main>\n      </div>\n      <footer>\n        <div className=\"wrapper\">\n          <span className=\"type--body-xsmall type--on-dark\">Â© {new Date().getFullYear()} All rights reserved</span>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}