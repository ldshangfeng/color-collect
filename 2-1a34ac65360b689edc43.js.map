{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/downloads.js","webpack:///./src/components/seo.js","webpack:///./src/components/headerEN.js","webpack:///./src/components/headerCN.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/feature.js","webpack:///./src/components/featuresEN.js","webpack:///./src/components/featuresCN.js","webpack:///./src/components/features.js","webpack:///./src/components/heroEN.js","webpack:///./src/components/heroCN.js","webpack:///./src/components/hero.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","a","loader","enqueue","React","createContext","m","module","exports","require","default","Downloads","_ref","iosTitle","iosLink","androidTitle","androidLink","_ref$size","size","data","_public_static_d_484292569_json__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","react__WEBPACK_IMPORTED_MODULE_2__","href","className","styles","downloadItem","downloadMobile","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","iosSmall","childImageSharp","title","alt","downloadDesktop","iosMedium","androidSmail","androidMedium","defaultProps","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","HeaderEN","siteTitle","logo","iconLan","iconMenu","iconClose","lanTitle","react_default","header","gatsby_browser_entry","to","language","gatsby_image_default","HeaderCN","Header","_4030748266","headerEN","iconLanCN","headerCN","titleCN","iconLanEN","Footer","homeLink","homeTitle","integrationLink","integrationTitle","creditLink","creditTitle","policyTitle","termsTitle","mobile","Date","getFullYear","desktop","nav","react","downloads","copyrightPolicy","policy","Layout","children","footer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Feature","desc","image","titleBold","feature","style","fontWeight","fluid","src","FeaturesEN","imageQuery","_200020908","features","cameraEn","photosEn","previewEn","propType","defaultProp","FeaturesCN","_2761445992","Features","featuresEN","featuresCN","PropTypes","string","HeroEN","_1872223077","position","paddingBottom","note","subtitle","mockup","mockupMobile","mockupDesktop","HeroCN","_3387220322","contentWrapper","downloadsWrapper","Hero","heroEN","heroCN"],"mappings":"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","file":"2-1a34ac65360b689edc43.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React, { Fragment } from \"react\"\nimport Img from \"gatsby-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styles from \"./downloads.module.css\"\n\nconst Downloads = ({ iosTitle, iosLink, androidTitle, androidLink, size = `m` }) => {\n\n  function IosImageDesktop() {\n    if (size === \"s\") {\n      return <Img fixed={data.iosSmall.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    } else {\n      return <Img fixed={data.iosMedium.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    }\n  }\n\n  function AndroidImageDesktop() {\n    if (size === \"s\") {\n      return <Img fixed={data.androidSmail.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    } else {\n      return <Img fixed={data.androidMedium.childImageSharp.fixed}\n                  title={iosTitle}\n                  alt={iosTitle}\n      />\n    }\n  }\n\n  const data = useStaticQuery(graphql`\n    query {\n      iosSmall: file(relativePath: { eq: \"button/download-ios.png\" }) {\n        childImageSharp {\n          fixed(width: 48, height: 48) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      androidSmail: file(relativePath: { eq: \"button/download-android.png\" }) {\n        childImageSharp {\n          fixed(width: 48, height: 48) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iosMedium: file(relativePath: { eq: \"button/download-ios.png\" }) {\n        childImageSharp {\n          fixed(width: 64, height: 64) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      androidMedium: file(relativePath: { eq: \"button/download-android.png\" }) {\n        childImageSharp {\n          fixed(width: 64, height: 64) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Fragment>\n      <a href={iosLink}\n         className={styles.downloadItem}\n      >\n        <span className={styles.downloadMobile}>\n          <Img fixed={data.iosSmall.childImageSharp.fixed}\n               title={iosTitle}\n               alt={iosTitle}\n          />\n        </span>\n        <span className={styles.downloadDesktop}>\n          <IosImageDesktop/>\n        </span>\n      </a>\n      <a href={androidLink}\n         className={styles.downloadItem}\n      >\n        <span className={styles.downloadMobile}>\n          <Img fixed={data.androidSmail.childImageSharp.fixed}\n               title={androidTitle}\n               alt={androidTitle}\n          />\n        </span>\n        <span className={styles.downloadDesktop}>\n          <AndroidImageDesktop/>\n        </span>\n      </a>\n    </Fragment>\n  )\n}\n\nDownloads.propTypes = {}\n\nDownloads.defaultProps = {}\n\nexport default Downloads","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styles from \"./header.module.css\"\n\n\nconst HeaderEN = ({ siteTitle, logo, iconMenu, iconClose, iconLan, lanTitle }) => {\n  return (\n    <header className={styles.header}>\n      <Link to={`/cn/`} className={styles.language}>\n        <Img fixed={iconLan} title={lanTitle} alt={lanTitle} />\n      </Link>\n      <Link to=\"/\" className={styles.logo}>\n        <Img fixed={logo} title={siteTitle} alt={siteTitle + ` Logo`} />\n      </Link>\n      {/*<div className={styles.menu}>*/}\n      {/*  <div className={styles.menuTrigger}>*/}\n      {/*    <Img fixed={iconMenu} title=\"Open Menu\" alt=\"Open Menu\" />*/}\n      {/*    /!*<Img fixed={iconClose} title=\"Close Menu\" alt=\"Close Menu\" />*!/*/}\n      {/*  </div>*/}\n      {/*  <div className={styles.menuList}>*/}\n      {/*    /!*<Link to={`/`}>Palettes</Link>*!/*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n    </header>\n  )\n}\n\nHeaderEN.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeaderEN.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default HeaderEN\n","import { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styles from \"./header.module.css\"\n\n\nconst HeaderCN = ({ siteTitle, logo, iconMenu, iconClose, iconLan, lanTitle }) => {\n  return (\n    <header className={styles.header}>\n      <Link to={`/`} className={styles.language}>\n        <Img fixed={iconLan} title={lanTitle} alt={lanTitle}/>\n      </Link>\n      <Link to=\"/cn/\" className={styles.logo}>\n        <Img fixed={logo} title={siteTitle} alt={siteTitle + ` Logo`}/>\n      </Link>\n      {/*<div className={styles.menu}>*/}\n      {/*  <div className={styles.menuTrigger}>*/}\n      {/*    <Img fixed={iconMenu} title=\"Open Menu\" alt=\"Open Menu\"/>*/}\n      {/*    /!*<Img fixed={iconClose} title=\"Close Menu\" alt=\"Close Menu\" />*!/*/}\n      {/*  </div>*/}\n      {/*  <div className={styles.menuList}>*/}\n      {/*    /!*<Link to={`/`}>探索色卡</Link>*!/*/}\n      {/*    /!*<Link to={`/`}>合作应用</Link>*!/*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n    </header>\n  )\n}\n\nHeaderCN.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeaderCN.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default HeaderCN\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport HeaderEN from \"./headerEN\"\nimport HeaderCN from \"./headerCN\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\n\nconst Header = ({ language }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          titleCN\n        }\n      }\n      \n      logo: file(relativePath: { eq: \"logos/colorcollect-mobile-logo.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconMenu: file(relativePath: { eq: \"icons/menu.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconClose: file(relativePath: { eq: \"icons/close.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconLanCN: file(relativePath: { eq: \"icons/language-cn.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      \n      iconLanEN: file(relativePath: { eq: \"icons/language-en.png\" }) {\n        childImageSharp {\n          fixed(width: 24, height: 24) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  if (language === 'en') {\n    return (\n      <HeaderEN siteTitle={data.site.siteMetadata.title}\n                logo={data.logo.childImageSharp.fixed}\n                iconMenu={data.iconMenu.childImageSharp.fixed}\n                iconClose={data.iconClose.childImageSharp.fixed}\n                iconLan={data.iconLanCN.childImageSharp.fixed}\n                lanTitle={`访问色采中文网站`}\n      />\n    )\n  } else if (language === 'cn') {\n    return (\n      <HeaderCN siteTitle={data.site.siteMetadata.titleCN}\n                logo={data.logo.childImageSharp.fixed}\n                iconMenu={data.iconMenu.childImageSharp.fixed}\n                iconClose={data.iconClose.childImageSharp.fixed}\n                iconLan={data.iconLanEN.childImageSharp.fixed}\n                lanTitle={`Visit Color Collect Website in English`}\n      />\n    )\n  }\n}\n\nHeader.propTypes = {\n  language: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  language: `en`,\n}\n\nexport default Header\n","import React, { Fragment } from \"react\"\nimport Downloads from \"./downloads\"\nimport styles from \"./footer.module.css\"\nimport { Link } from \"gatsby\"\n\nconst Footer = ({\n                  homeLink, homeTitle,\n                  integrationLink, integrationTitle,\n                  creditLink, creditTitle,\n                  policyTitle, termsTitle,\n                  iosTitle, iosLink,\n                  androidTitle, androidLink\n                }) => {\n  function HomeNav() {\n    if (homeLink) {\n      return <Link to={homeLink}>{homeTitle}</Link>\n    } else {\n      return <Fragment/>\n    }\n  }\n\n  function AppIntegrationNav() {\n    if (integrationLink) {\n      return <Link to={integrationLink}>{integrationTitle}</Link>\n    } else {\n      return <Fragment/>\n    }\n  }\n\n  function CreditNav() {\n    if (creditLink) {\n      return <Link to={creditLink}>{creditTitle}</Link>\n    } else {\n      return <Fragment/>\n    }\n  }\n\n  return (\n    <footer>\n      <div className=\"wrapper\">\n\n        <div className={styles.mobile}>\n          <span className=\"type--body-xsmall type--on-dark\">© {new Date().getFullYear()} All rights reserved</span>\n        </div>\n\n        <div className={styles.desktop}>\n          <div className={styles.nav}>\n            <HomeNav/>\n            <AppIntegrationNav/>\n            <CreditNav/>\n          </div>\n\n          <Downloads size={`s`}\n                     iosTitle={iosTitle}\n                     iosLink={iosLink}\n                     androidTitle={androidTitle}\n                     androidLink={androidLink}\n          />\n\n          <div className={styles.copyrightPolicy}>\n            <div>© {new Date().getFullYear()} All rights reserved</div>\n            <div className={styles.policy}>\n              <Link to={\"/\"}>{policyTitle}</Link>\n              <Link to={\"/\"}>{termsTitle}</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, language }) => {\n\n  function FooterFrag() {\n    if (language === \"en\") {\n      return <Footer homeLink={`/`}\n                     homeTitle={`Home`}\n                     policyTitle={`Privacy Policy`}\n                     termsTitle={`Terms of Use`}\n                     iosTitle={`Download Color Collect for iOS`}\n                     iosLink={`https://apps.apple.com/app/id1439521846`}\n                     androidTitle={`Download Color Collect for Android`}\n                     androidLink={`https://play.google.com/store/apps/details?id=com.wizeyes.colorcapture`}\n      />\n    } else {\n      return <Footer homeLink={`/cn/`}\n                     homeTitle={`首页`}\n                     policyTitle={`隐私条款`}\n                     termsTitle={`使用条款`}\n                     iosTitle={`从苹果商店下载色采 iOS 版本`}\n                     iosLink={`https://apps.apple.com/cn/app/id1439521846`}\n                     androidTitle={`下载色采安卓版本`}\n                     androidLink={`https://www.coolapk.com/apk/231885`}\n      />\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <Header language={language}/>\n        <main>{children}</main>\n      </div>\n      <FooterFrag/>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\nimport styles from \"./feature.module.css\"\n\n\nconst Feature = ({ title, desc, image, titleBold }) => {\n  return (\n    <div className={styles.feature}>\n      <div className={styles.content}>\n        <h2 className=\"type--h3\" style={titleBold ? {fontWeight: 600} : {}}>{title}</h2>\n        <p className=\"type--body-small\">{desc}</p>\n      </div>\n      <div className={styles.image}>\n        <Img fluid={image} title={title} alt={title} />\n      </div>\n    </div>\n  )\n}\n\nFeature.propTypes = {\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.object,\n  titleBold: PropTypes.bool,\n}\n\nFeature.defaultProps = {\n  title: ``,\n  desc: ``,\n  image: {src: ``},\n  titleBold: false,\n}\n\nexport default Feature","import React from \"react\"\nimport Feature from \"./feature\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styles from \"./feature.module.css\"\n\nconst FeaturesEN = () => {\n  const imageQuery = useStaticQuery(graphql`\n    query {\n      cameraEn: file(relativePath: { eq: \"features/camera-en.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 768) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      \n      photosEn: file(relativePath: { eq: \"features/photos-en.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 768) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      \n      previewEn: file(relativePath: { eq: \"features/preview-en.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 768) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n\n\n  return (\n    <div className={styles.features}>\n      <Feature title={`Real-time capture`}\n               desc={`Eu facilisi ut ullamcorper aenean mattis. Eu facilisi ut ullamcorper aenean mattis.`}\n               image={imageQuery.cameraEn.childImageSharp.fluid}\n      />\n\n      <Feature title={`Explore 600+ palettes`}\n               desc={`Eu facilisi ut ullamcorper aenean mattis. Eu facilisi ut ullamcorper aenean mattis.`}\n               image={imageQuery.photosEn.childImageSharp.fluid}\n      />\n\n      <Feature title={`Photo color palettes`}\n               desc={`Eu facilisi ut ullamcorper aenean mattis. Eu facilisi ut ullamcorper aenean mattis.`}\n               image={imageQuery.previewEn.childImageSharp.fluid}\n      />\n    </div>\n  )\n}\n\nFeaturesEN.propType = {}\n\nFeaturesEN.defaultProp = {}\n\nexport default FeaturesEN","import React from \"react\"\nimport Feature from \"./feature\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst FeaturesCN = () => {\n  const imageQuery = useStaticQuery(graphql`\n    query {\n      cameraEn: file(relativePath: { eq: \"features/camera-cn.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 768) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      \n      photosEn: file(relativePath: { eq: \"features/photos-cn.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 768) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      \n      previewEn: file(relativePath: { eq: \"features/preview-cn.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 768) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n\n\n  return (\n    <div>\n      <Feature title={`相机实时配色`}\n               desc={`从中西经典艺术作品、自然风光、电影动画等提取的600多种原创配色。`}\n               image={imageQuery.cameraEn.childImageSharp.fluid}\n               titleBold={true}\n      />\n\n      <Feature title={`灵感探索配色`}\n               desc={`从中西经典艺术作品、自然风光、电影动画等提取的600多种原创配色。`}\n               image={imageQuery.photosEn.childImageSharp.fluid}\n               titleBold={true}\n      />\n\n      <Feature title={`照片智能配色`}\n               desc={`更精准的颜色识别算法，从自己的相片中发现配色灵感。`}\n               image={imageQuery.previewEn.childImageSharp.fluid}\n               titleBold={true}\n      />\n    </div>\n  )\n}\n\nFeaturesCN.propType = {}\n\nFeaturesCN.defaultProp = {}\n\nexport default FeaturesCN","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport FeaturesEN from \"./featuresEN\"\nimport FeaturesCN from \"./featuresCN\"\n\nconst Features = ({ language }) => {\n  if (language === \"en\") {\n    return <FeaturesEN/>\n  } else if (language === \"cn\") {\n    return <FeaturesCN/>\n  }\n}\n\nFeatures.propType = {\n  language: PropTypes.string,\n}\n\nFeatures.defaultProp = {\n  language: `en`,\n}\n\nexport default Features","import React from \"react\"\nimport Downloads from \"./downloads\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styles from \"./heroEN.module.css\"\n\n\nconst HeroEN = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      mockupMobile: file(relativePath: { eq: \"mockups/faceEN.png\" }) {\n        childImageSharp {\n          fixed(width: 203, height: 319) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      mockupDesktop: file(relativePath: { eq: \"mockups/faceEN.png\" }) {\n        childImageSharp {\n          fixed(width: 320) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div style={{\n      position: \"relative\",\n      paddingBottom: 215,\n    }}>\n\n      <div className={styles.note}>INTRODUCING</div>\n      <h1 className={styles.title}>Color Collect</h1>\n      <p className={styles.subtitle}>A color app for everyone.</p>\n\n      <div className={styles.downloads}>\n        <Downloads iosTitle={`Download Color Collect for iOS`}\n                   iosLink={`https://apps.apple.com/app/id1439521846`}\n                   androidTitle={`Download Color Collect for Android`}\n                   androidLink={`https://play.google.com/store/apps/details?id=com.wizeyes.colorcapture`}\n        />\n      </div>\n\n      {/*<Link to={\"/\"}*/}\n      {/*      className={styles.paletteLink}*/}\n      {/*>*/}\n      {/*  Explore palettes →*/}\n      {/*</Link>*/}\n\n      <div className={styles.mockup}>\n        <div className={styles.mockupMobile}>\n          <Img fixed={data.mockupMobile.childImageSharp.fixed}/>\n        </div>\n        <div className={styles.mockupDesktop}>\n          <Img fixed={data.mockupDesktop.childImageSharp.fixed}/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nHeroEN.propType = {}\n\nHeroEN.defaultProp = {}\n\nexport default HeroEN\n\n","import React from \"react\"\nimport Downloads from \"./downloads\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styles from \"./heroCN.module.css\"\n\n\nconst HeroCN = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      mockupMobile: file(relativePath: { eq: \"mockups/faceCN.png\" }) {\n        childImageSharp {\n          fixed(width: 203, height: 319) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n      mockupDesktop: file(relativePath: { eq: \"mockups/faceCN.png\" }) {\n        childImageSharp {\n          fixed(width: 320) {\n            base64\n            width\n            height\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n\n      <div className={styles.contentWrapper}>\n\n        <div className={styles.mockup}>\n          <div className={styles.mockupMobile}>\n            <Img fixed={data.mockupMobile.childImageSharp.fixed}/>\n          </div>\n          <div className={styles.mockupDesktop}>\n            <Img fixed={data.mockupDesktop.childImageSharp.fixed}/>\n          </div>\n        </div>\n\n        <div className={styles.content}>\n          <h1 className=\"type--h4-cn\">色采</h1>\n          <p>写给大家用的配色应用。</p>\n          <p>寻找配色灵感，</p>\n          <p>轻松搭配出好色彩。</p>\n        </div>\n\n        {/*<Link to={\"/\"} className={styles.cta}>*/}\n        {/*  探索色卡 <span style={{ writingMode: \"lr\" }}>→</span>*/}\n        {/*</Link>*/}\n      </div>\n\n\n      <div className={styles.downloadsWrapper}>\n        <Downloads iosTitle={`从苹果商店下载色采 iOS 版本`}\n                   iosLink={`https://apps.apple.com/cn/app/id1439521846`}\n                   androidTitle={`下载色采安卓版本`}\n                   androidLink={`https://www.coolapk.com/apk/231885`}\n        />\n      </div>\n\n    </div>\n  )\n}\n\n\nHeroCN.propType = {}\n\nHeroCN.defaultProp = {}\n\nexport default HeroCN\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport HeroEN from \"./heroEN\"\nimport HeroCN from \"./heroCN\"\n\nconst Hero = ({ language }) => {\n  if (language === \"en\") {\n    return <HeroEN/>\n  } else if (language === \"cn\") {\n    return <HeroCN/>\n  }\n}\n\nHero.propType = {\n  language: PropTypes.string,\n}\n\nHero.defaultProp = {\n  language: `en`,\n}\n\nexport default Hero"],"sourceRoot":""}